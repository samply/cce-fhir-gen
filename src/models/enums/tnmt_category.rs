use fake::Dummy;

#[derive(Debug, Dummy)]
pub enum TnmtCategory {
    Zero,
    One,
    OneA,
    OneA1,
    OneA2,
    OneB,
    OneB1,
    OneB2,
    OneC,
    OneC1,
    OneC2,
    OneC3,
    OneD,
    OneMi,
    Two,
    TwoA,
    TwoA1,
    TwoA2,
    TwoB,
    TwoC,
    TwoD,
    Three,
    ThreeA,
    ThreeB,
    ThreeC,
    ThreeD,
    Four,
    FourA,
    FourB,
    FourC,
    FourD,
    FourE,
    A,
    Is,
    IsDcis,
    IsLcis,
    IsPaget,
    IsPd,
    IsPu,
    X,
}

impl TnmtCategory {
    pub fn as_str(&self) -> &'static str {
        match self {
            TnmtCategory::Zero => "0",
            TnmtCategory::One => "1",
            TnmtCategory::OneA => "1a",
            TnmtCategory::OneA1 => "1a1",
            TnmtCategory::OneA2 => "1a2",
            TnmtCategory::OneB => "1b",
            TnmtCategory::OneB1 => "1b1",
            TnmtCategory::OneB2 => "1b2",
            TnmtCategory::OneC => "1c",
            TnmtCategory::OneC1 => "1c1",
            TnmtCategory::OneC2 => "1c2",
            TnmtCategory::OneC3 => "1c3",
            TnmtCategory::OneD => "1d",
            TnmtCategory::OneMi => "1mi",
            TnmtCategory::Two => "2",
            TnmtCategory::TwoA => "2a",
            TnmtCategory::TwoA1 => "2a1",
            TnmtCategory::TwoA2 => "2a2",
            TnmtCategory::TwoB => "2b",
            TnmtCategory::TwoC => "2c",
            TnmtCategory::TwoD => "2d",
            TnmtCategory::Three => "3",
            TnmtCategory::ThreeA => "3a",
            TnmtCategory::ThreeB => "3b",
            TnmtCategory::ThreeC => "3c",
            TnmtCategory::ThreeD => "3d",
            TnmtCategory::Four => "4",
            TnmtCategory::FourA => "4a",
            TnmtCategory::FourB => "4b",
            TnmtCategory::FourC => "4c",
            TnmtCategory::FourD => "4d",
            TnmtCategory::FourE => "4e",
            TnmtCategory::A => "a",
            TnmtCategory::Is => "is",
            TnmtCategory::IsDcis => "is(DCIS)",
            TnmtCategory::IsLcis => "is(LCIS)",
            TnmtCategory::IsPaget => "is(Paget)",
            TnmtCategory::IsPd => "is(pd)",
            TnmtCategory::IsPu => "is(pu)",
            TnmtCategory::X => "X",
        }
    }
}
